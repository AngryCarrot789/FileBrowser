<v:WindowEx x:Class="FileBrowser.MainWindow"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:v="clr-namespace:FileBrowser.Views"
            xmlns:editor="clr-namespace:FileBrowser.Core.Editor;assembly=FileBrowser.Core"
            xmlns:ap="clr-namespace:FileBrowser.AttachedProperties"
            xmlns:acs="clr-namespace:FileBrowser.AdvancedContextService"
            xmlns:c="clr-namespace:FileBrowser.Converters"
            xmlns:e="clr-namespace:FileBrowser.Core.Editor.Context;assembly=FileBrowser.Core"
            xmlns:pe="clr-namespace:FileBrowser.PropertyEditing"
            xmlns:attached="clr-namespace:FileBrowser.Themes.Attached"
            xmlns:interactivity="clr-namespace:FileBrowser.Interactivity"
            xmlns:local="clr-namespace:FileBrowser"
            xmlns:controls="clr-namespace:FileBrowser.Controls"
            xmlns:fileSystem="clr-namespace:FileBrowser.Core.Editor.FileTree;assembly=FileBrowser.Core"
            xmlns:jar="clr-namespace:FileBrowser.Core.Editor.FileTree.Zip;assembly=FileBrowser.Core"
            xmlns:physical="clr-namespace:FileBrowser.Core.Editor.FileTree.Physical;assembly=FileBrowser.Core"
            xmlns:fe="clr-namespace:FileBrowser.Core.Editor.FileExplorer;assembly=FileBrowser.Core"
            xmlns:ex="clr-namespace:FileBrowser.Explorer"
            mc:Ignorable="d"
            Title="MainWindow" Width="1024" Height="576"
            Style="{StaticResource CustomWindowStyleEx}"
            TitlebarBrush="{DynamicResource ABrush.Tone5.Background.Static}"
            d:DataContext="{d:DesignInstance editor:MainViewModel}"
            Background="{DynamicResource PanelBorderBrush}">
    <Window.Resources>
        <Style x:Key="AccentToneMouseOverButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{DynamicResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true"
                                CornerRadius="{TemplateBinding attached:CornerRadiusHelper.Value}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Defaulted.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Defaulted.Border}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ABrush.AccentTone3.Background.Static}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ABrush.AccentTone3.Border.Static}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource ABrush.AccentTone1.Background.Static}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ABrush.AccentTone1.Border.Static}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type v:WindowEx}}, Path=TitlebarBrush, Mode=OneWay}"
              BorderBrush="{DynamicResource PanelBorderBrush}" BorderThickness="0,0,0,1">
            <MenuItem Header="File">
                <MenuItem Header="Open folder" Command="{Binding OpenFolderCommand, Mode=OneTime}"/>
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" x:Name="TreeListColumn" MaxWidth="600"/>
                <ColumnDefinition Width="1"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Background="{DynamicResource ABrush.Tone2.Background.Static}" BorderThickness="0">
                <Border.Resources>
                    <local:DummyTreeItemStyleSelector x:Key="DummyTreeItemStyleSelector">
                        <local:DummyTreeItemStyleSelector.DefaultStyle>
                            <Style TargetType="{x:Type ex:FileTreeItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                <Setter Property="ap:HandleRequestBringIntoView.IsEnabled" Value="True"/>
                            </Style>
                        </local:DummyTreeItemStyleSelector.DefaultStyle>
                        <local:DummyTreeItemStyleSelector.WithDummyStyle>
                            <Style TargetType="{x:Type ex:FileTreeItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                <Setter Property="ap:HandleRequestBringIntoView.IsEnabled" Value="True"/>
                                <Setter Property="controls:TreeExtension.IsInitiallyExpandable" Value="{Binding HasExpandedOnce, Converter={StaticResource InvertBoolConverter}}"/>
                            </Style>
                        </local:DummyTreeItemStyleSelector.WithDummyStyle>
                    </local:DummyTreeItemStyleSelector>
                </Border.Resources>
                <ex:FileTreeControl ItemsSource="{Binding FileTree.Root.Items}" Background="Transparent" BorderThickness="0"
                          acs:AdvancedContextMenu.ContextGenerator="{x:Static e:ExplorerContextGenerator.Instance}"
                          ScrollViewer.CanContentScroll="True"
                          VirtualizingStackPanel.IsVirtualizing="True"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          VirtualizingStackPanel.ScrollUnit="Pixel"
                          interactivity:FileDropAttachments.DropHandler="{Binding FileTree}"
                          ItemContainerStyleSelector="{StaticResource DummyTreeItemStyleSelector}">
                    <ex:FileTreeControl.Style>
                        <Style TargetType="{x:Type ex:FileTreeControl}" BasedOn="{StaticResource {x:Type TreeView}}">
                            
                        </Style>
                    </ex:FileTreeControl.Style>
                    <TreeView.InputBindings>
                        <KeyBinding Key="F5" Command="{x:Static fileSystem:BaseTreeFileViewModel.RefreshCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeView}}, Path=SelectedItem}"/>
                    </TreeView.InputBindings>
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type jar:ZipFolderEntryViewModel}" ItemsSource="{Binding Items, Mode=OneTime}">
                            <TextBlock Text="{Binding ZipFileName}" ToolTip="{Binding FullZipPath}"/>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type jar:ZipFileViewModel}" ItemsSource="{Binding Items, Mode=OneTime}">
                            <TextBlock Text="{Binding FileName}"/>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type jar:ZipFileEntryViewModel}">
                            <TextBlock Text="{Binding ZipFileName}" ToolTip="{Binding FullZipPath}"/>
                        </DataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type physical:IOFolderItemViewModel}" ItemsSource="{Binding Items, Mode=OneTime}">
                            <controls:IconTextPairControl Text="{Binding FileName}" TargetFilePath="{Binding FilePath}" Background="Transparent"/>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type physical:IOFileItemViewModel}">
                            <controls:IconTextPairControl Text="{Binding FileName}" TargetFilePath="{Binding FilePath}" Background="Transparent"/>
                        </DataTemplate>
                    </TreeView.Resources>
                </ex:FileTreeControl>
            </Border>
            <Border Grid.Column="2" BorderThickness="0" 
                    Background="{DynamicResource ABrush.Tone2.Background.Static}" 
                    SnapsToDevicePixels="True">
                <DockPanel DataContext="{Binding FileManager}">
                    <!-- Just used for a nice looking selector -->
                    <Border DockPanel.Dock="Top" BorderThickness="0,0,0,1"
                            Background="Transparent" BorderBrush="{DynamicResource PanelBorderBrush}" 
                            Margin="0,0,0,0"
                            interactivity:FileDropAttachments.DropHandler="{Binding}">
                        <TabControl Style="{StaticResource NoOffsetAndNoContentTabControl}"
                                    Background="{DynamicResource ABrush.Tone5.Background.Static}"
                                    ItemsSource="{Binding Explorers, Mode=OneTime}"
                                    SelectedItem="{Binding ActiveExplorer}"
                                    Height="24">
                            <TabControl.ItemContainerStyle>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}" />
                                    <Setter Property="Background" Value="{DynamicResource TabItem.Static.Background}" />
                                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabControl}, Path=BorderBrush}" />
                                    <Setter Property="Margin" Value="-1,0,0,-1" />
                                    <Setter Property="Padding" Value="10,4,10,4" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TabItem}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                                    <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,1,1" />
                                                    <Border x:Name="PART_SelectionBorder" Background="{DynamicResource ABrush.AccentTone2.Background.Static}" VerticalAlignment="Bottom" Height="3" Visibility="Collapsed" />
                                                    <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False"
                                                                      HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                                      Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                                        <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource TabItem.MouseOver.Background}" />
                                                        <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource TabItem.MouseOver.Background}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                                        <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource ABrush.Tone4.Background.Disabled}" />
                                                        <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource ABrush.Tone4.Background.Disabled}" />
                                                        <Setter Property="Visibility" TargetName="PART_SelectionBorder" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                                                        <Setter Property="Background" TargetName="mainBorder" Value="{DynamicResource TabItem.Disabled.Background}" />
                                                        <Setter Property="BorderBrush" TargetName="mainBorder" Value="{DynamicResource TabItem.Disabled.Background}" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TabControl.ItemContainerStyle>
                            <TabControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type fe:FileExplorerViewModel}">
                                    <TextBlock Text="{Binding CurrentFolderName}"/>
                                </DataTemplate>
                            </TabControl.ItemTemplate>
                        </TabControl>
                    </Border>
                    <Border Background="{DynamicResource ABrush.Tone3.Background.Static}" DataContext="{Binding ActiveExplorer}">
                        <ex:FileExplorerControl ItemsSource="{Binding Items, Mode=OneTime}" ExplorerViewMode="{Binding ExplorerView}"/>
                    </Border>
                </DockPanel>
            </Border>
            <GridSplitter Grid.Column="1" Margin="-5,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
                          ap:GridLatchSplitter.IsEnabled="True"
                          ap:GridLatchSplitter.MinimumSize="250"
                          ap:GridLatchSplitter.ThresholdSizeToClose="75"
                          ap:GridLatchSplitter.ThresholdSizeToOpen="175"
                          ap:GridLatchSplitter.TargetColumn="{Binding ElementName=TreeListColumn}"/>
        </Grid>
    </DockPanel>
</v:WindowEx>
